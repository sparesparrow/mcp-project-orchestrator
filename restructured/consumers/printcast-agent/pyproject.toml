[project]
name = "printcast-agent"
version = "0.1.0"
description = "Automated voice-to-print service with AI conversational agent integration"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "PrintCast Team", email = "team@printcast.ai"}
]
keywords = ["mcp", "voice", "asterisk", "sip", "elevenlabs", "ai", "print", "automation"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Communications :: Telephony",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "fastmcp>=0.3.0",
    "httpx>=0.27.0",
    "pydantic>=2.0",
    "pydantic-settings>=2.0",
    "python-dotenv>=1.0.0",
    "aiofiles>=24.1.0",
    "asyncio>=3.4.3",
    "feedparser>=6.0.11",
    "beautifulsoup4>=4.12.3",
    "lxml>=5.0.0",
    "boto3>=1.34.0",
    "elevenlabs>=1.0.0",
    "redis>=5.0.0",
    "celery>=5.3.0",
    "pycups>=2.0.0",
    "jinja2>=3.1.3",
    "reportlab>=4.0.0",
    "python-multipart>=0.0.6",
    "uvloop>=0.19.0",
    "structlog>=24.1.0",
    "prometheus-client>=0.19.0",
    "opentelemetry-api>=1.22.0",
    "opentelemetry-sdk>=1.22.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "black>=24.1.0",
    "ruff>=0.3.0",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
    "ipython>=8.20.0",
]

asterisk = [
    "panoramisk>=1.4",  # Asterisk AMI/ARI async client
    "pyst2>=0.5.1",     # Asterisk AGI
]

aws = [
    "aioboto3>=12.0.0",
    "boto3-stubs[essential]>=1.34.0",
]

[build-system]
requires = ["setuptools>=69", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["mcp_server*", "integrations*", "orchestration*", "utils*"]

[project.scripts]
printcast-server = "mcp_server.main:main"
printcast-orchestrator = "orchestration.main:main"

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests"]
pythonpath = ["src"]
asyncio_mode = "auto"
addopts = "-ra -q --strict-markers --cov=src --cov-report=term-missing"

[tool.black]
line-length = 100
target-version = ['py311', 'py312']
include = '\.pyi?$'

[tool.ruff]
line-length = 100
target-version = "py311"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "SIM", # flake8-simplify
]
ignore = ["E501", "B008", "B905"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = false
no_implicit_optional = true
check_untyped_defs = true
strict_optional = true
show_error_codes = true