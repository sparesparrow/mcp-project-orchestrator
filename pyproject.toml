[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mcp-project-orchestrator"
version = "0.1.0"
description = "Main Conan manager and Python environment source for orchestrating MCP development flow."
readme = "README.md"
requires-python = ">=3.9"
authors = [
    { name = "sparesparrow" }
]
license = { text = "MIT" }
dependencies = [
    "fastapi>=0.68.0",
    "uvicorn>=0.15.0",
    "jinja2>=3.0.1",
    "pydantic>=1.8.2",
    "python-dotenv>=0.19.0",
    "aiofiles>=0.7.0",
    "PyYAML>=6.0",
    "jsonschema>=4.0.0",
    "rich>=10.12.0",
    "typer>=0.4.0",
    "python-multipart>=0.0.5",
    "requests>=2.26.0",
    "aiohttp>=3.8.0",
    "watchdog>=2.1.6",
    "markdown>=3.3.4",
    "pygments>=2.10.0",
    "boto3>=1.26.0",
    "botocore>=1.29.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.2.5",
    "pytest-asyncio>=0.16.0",
    "pytest-cov>=2.12.1",
    "mypy>=0.910",
    "ruff>=0.1.0",
    "build>=1.2.1",
    "twine>=5.0.0",
]
aws = [
    "boto3>=1.26.0",
    "botocore>=1.29.0",
]

[project.scripts]
mcp-orchestrator = "mcp_project_orchestrator.cli:main"

[project.urls]
Homepage = "https://github.com/sparesparrow/mcp-project-orchestrator"
Documentation = "https://github.com/sparesparrow/mcp-project-orchestrator/blob/main/README.md"

[tool.mcp_project_orchestrator]
description = "An MCP server to orchestrate software projects, utilizing standardized templates and design patterns."

[tool.setuptools]
package-dir = {"" = "src"}
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]
include = ["mcp_project_orchestrator*"]

[tool.setuptools.package-data]
"mcp_project_orchestrator" = [
  "templates/**/*.json",
  "templates/**/*.py",
  "prompts/**/*.json",
  "resources/**/*.json",
  "mermaid/templates/**/*.json",
  "mermaid/templates/**/*.mmd",
  "**/*.yaml",
  "**/*.yml",
  "**/*.md",
  "**/*.txt",
]

[tool.mcp_project_orchestrator.config]
communication_protocol = "JSON-RPC"
mcp_compliance = true

[tool.black]
line-length = 100
target-version = ["py39"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.ruff]
line-length = 100
target-version = "py39"
select = ["E", "F", "B", "I"]
ignore = []

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --cov=mcp_project_orchestrator"
testpaths = ["tests"] 